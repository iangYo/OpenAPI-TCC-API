_id: spc_af1c5f17a6654e4fabb6daa9209faf13
type: ApiSpec
parentId: wrk_17b857c2a99f4cbd9c8952aa0ebcab8c
modified: 1642459342990
created: 1638308055978
fileName: TCC API
contents: >-
  openapi: 3.0.0

  info:
    description: API
    version: 1.0.0
    title: API
  tags:
    - name: auth
      description: Endpoints for authentication
    - name: testimonial
      description: Endpoints for testimonials
    - name: objective
      description: Endpoints for objective
  paths:
    /auth/login:
      post:
        tags:
          - auth
        summary: Login
        description: ''
        requestBody:
          $ref: "#/components/requestBodies/AuthLogin"
        responses:
          "200":
            description: Ok
            content:
              application/json:
                example:
                  _id: 0
                  name: Foo Bar
                  email: foo@bar.com
                  createdAt: <timestamp>
                  updatedAt: <timestamp>
                  token: <token>
          '404':
            description: Not found
            content:
              application/json:
                example:
                  error: Usuário não encontrado!
    /auth/store:
      post:
        tags:
          - auth
        summary: Sign Up
        description: ''
        requestBody:
          $ref: '#/components/requestBodies/AuthStore'
        responses:
          '201':
            description: Created
            content:
              application/json:
                example:
                  name: Foo Bar
                  email: foobar@gmail.com
                  _id: 0
                  createdAt: '2021-11-30T23:29:32.932Z'
                  updatedAt: '2021-11-30T23:29:32.932Z'
                  __v: 0
    /testimonials:
      get:
        tags:
          - testimonial
        summary: Get all testimonials
        description: ''
        security:
          - bearerAuth: []
        parameters:
          - name: limit
            in: query
            description: Quantity of testimonials returned 
            required: false
            explode: true
            schema:
              type: integer
              default: 10
          - name: page
            in: query
            description: Number of page to skip before starting to collect the result set
            required: false
            explode: true
            schema:
              type: integer
              default: 1
        responses:
          '200':
            description: Ok
            content:
              application/json:
                example:
                  - _id: 0
                    user: 0
                    title: Foo
                    text: FooBar
                    createdAt: '2022-01-05T15:00:42.226Z'
                    updatedAt: '2022-01-05T15:00:42.226Z'
                    __v: 0
      post:
        tags:
          - testimonial
        summary: Store one testimonial
        description: ''
        security:
          - bearerAuth: []
        requestBody:
          $ref: '#/components/requestBodies/Testimonial'
        responses:
          '201':
            description: Created
    '/testimonials/{id}':
      get:
        tags:
          - testimonial
        summary: Get one testimoniall
        description: Get one testimonial by id
        security:
          - bearerAuth: []
        parameters:
           - name: id
             in: path
             description: Testimonial id
             required: true
             schema:
               type: integer
        responses:
          '200':
            description: Ok 
            content:
              application/json:
                example:
                  _id: 0
                  user: 0
                  title: Foo
                  text: Foobar
                  createdAt: '2022-01-05T15:00:42.226Z'
                  updatedAt: '2022-01-05T15:00:42.226Z'
                  __v: 0
    '/testimonials/user/{id}':
      get:
        tags:
          - testimonial
        summary: Get all testimonials by user
        description: ''
        security:
          - bearerAuth: []
        parameters:
          - name: id
            in: path
            description: The owner ID of the testimonials
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Ok
            content:
              application/json:
                example:
                  - _id: 0
                    user: 0
                    title: string
                    text: string
                    createdAt: '2022-01-05T15:20:11.558Z'
                    updatedAt: '2022-01-05T15:20:11.558Z'
                    __v: 0
    /objective:
      get:
        tags:
          - objective
        summary: Get all objectives of one user
        description: ''
        security:
          - bearerAuth: []
        responses:
          '200':
            description: Ok
            content:
              application/json:
                example:
                  - _id: 0
                    user: 0
                    start_date: '2021-09-29T19:17:14.048Z'
                    end_date: '2021-09-29T19:17:14.048Z'
                    reason: string
                    createdAt: '2022-01-17T22:17:23.062Z'
                    updatedAt: '2022-01-17T22:17:23.062Z'
                    __v: 0
      post:
        tags:
          - objective
        summary: Create one objective
        description: ''
        security:
          - bearerAuth: []
        requestBody:
          $ref: '#/components/requestBodies/Objective'
        responses:
          '201':
            description: Created
    '/objective/{id}':
      patch:
        tags:
          - objective
        summary: Get all objectives of one user
        description: ''
        security:
          - bearerAuth: []
        parameters:
          - name: id
            in: path
            description: The objective id
            required: true
            schema:
              type: string
        requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    start_date:
                      type: string
                    end_date:
                      type: string
                    reason:
                      type: string
        responses:
          '200':
            description: Ok
      delete:
        tags:
          - objective
        summary: Delete one objective
        description: ''
        security:
          - bearerAuth: []
        parameters:
          - name: id
            in: path
            description: The objective id
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Ok
  servers:
    - url: http://localhost:3333/v1
  components:
    securitySchemes:
      bearerAuth:            # arbitrary name for the security scheme
        type: http
        scheme: bearer
        bearerFormat: JWT  # optional, arbitrary value for documentation purposes
    requestBodies:
      AuthStore:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthStore"
        required: true
      AuthLogin:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthLogin"
        required: true
      Testimonial:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Testimonial"
        required: true
      Objective:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Objective"
        required: true
    schemas:
      AuthStore:
        type: object
        required:
          - name
          - email
          - password
        properties:
          name:
            type: string
          email:
            type: string
          password:
            type: string
      AuthLogin:
        type: object
        required:
          - email
          - password
        properties:
          email:
            type: string
          password:
            type: string
      Testimonial:
        type: object
        required:
          - user
          - title
          - text
        properties:
          user:
            type: string
          title:
            type: string
          text:
            type: string
      Objective:
        type: object
        required:
          - user
          - start_date
          - end_date
        properties:
          user:
            type: string
          start_date:
            type: string
          end_date:
            type: string
          reason:
            type: string
      ApiResponse:
        type: object
        properties:
          code:
            type: integer
            format: int32
          type:
            type: string
          message:
            type: string
contentType: yaml
